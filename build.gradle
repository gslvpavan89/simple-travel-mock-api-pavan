buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
    }
}

plugins {
    id 'nebula.optional-base' version '3.0.3'
    id 'nebula.provided-base' version '3.0.3'
    id "com.moowork.node" version '1.3.1'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'nebula.provided-base'

jar {
    baseName = 'destination-finder'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.security.oauth:spring-security-oauth2")
    compile("org.springframework.boot:spring-boot-starter-hateoas")
    compile 'com.google.guava:guava:19.0'
    compile 'org.atteo:evo-inflector:1.2.1'
    provided 'org.projectlombok:lombok:1.12.6'
    compile 'commons-io:commons-io:2.4'
    testCompile("junit:junit")
}

task copyWebApp(type: Copy) {
	from 'src/main/webapp/build'
	into 'build/resources/main/static/.'
}

task appNpmInstall(type: NpmTask) {
	description = "Installs all dependencies from package.json"
	workingDir = file("src/main/webapp")
	args = ["install"]
}

task appNpmBuild(type: NpmTask) {
	description = "Builds production version of the webapp"
	workingDir = file("src/main/webapp")
	args = ["run", "build"]
}

appNpmBuild.dependsOn appNpmInstall
copyWebApp.dependsOn appNpmBuild
compileJava.dependsOn copyWebApp

node {
	download = true

	// Set the work directory for unpacking node
	workDir = file("src/main/webapp/nodejs")

	// Set the work directory for NPM
	npmWorkDir = file("src/main/webapp/npm")
}